#!/usr/bin/ruby

#
## Obfuscate a Perl script
#

var wait_time = 0.1;    # in seconds
var(input_file, output_file=%f(output.pl)) = ARGV.map{.to_file}...;

var tmp     = require('File::Temp');
var base64  = require('MIME::Base64').();

var fh    = tmp.new(UNLINK => 1);
var fname = fh.filename;

input_file.is_a(File) || (
    die "No input file specified!";
);
input_file.is_file || (
    die "`#{input_file}': #{$!}";
);

var content = input_file.open_r.slurp;
var encoded = base64.encode_base64(content).reverse;
encoded -= /\R/g;

fh.print(<<"CODE_CONTENT" -> encode_utf8);
var tmp    = require('File::Temp');
var base64 = require('MIME::Base64').();

var fh    = tmp.new(UNLINK => 1);
var fname = fh.filename;

var decoded = base64.decode_base64('#{encoded}'.reverse);

fh.print(decoded -> encode_utf8);
fh.close;

var thr = {Sys.system($^PERL, fname, Perl.eval('\\@ARGV')...)}.fork,
Sys.sleep(#{wait_time});
File.new(fname).unlink,
exit (thr.get >> 8);
CODE_CONTENT

fh.close;

var thr = {Sys.system($0, '-c', '-o', output_file, fname)}.fork;
Sys.sleep(wait_time);
File.new(fname).unlink,
exit (thr.wait >> 8);
