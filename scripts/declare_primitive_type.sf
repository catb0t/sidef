#!/usr/bin/ruby

#
## http://rosettacode.org/wiki/Define_a_primitive_data_type
#

class MyInt(value) {

    def min = 1;
    def max = 10;

    method new(value is Number) {
        (value > max) || (value < min) && (
            die "Invalid value '#{value}': must be between #{min} and #{max}";
        );
        value.is_int || (
            die "Invalid value '#{value}': must be an integer";
        );
    }

    method new(value) {
        die "Invalid value '#{value}'; expected a number";
    }

    method get_value {
        value.get_value.get_value;
    }

    method AUTOLOAD(name, *args) {
        var result = value.(name)(args...);

        result.is_a(Number) &&
            return MyInt(result.int);

        result;
    }
}

#
## Tests:
#
var a = MyInt(2);    # creates a new object of type `MyInt`
a += 7;              # adds 7 to a
say a;               # => 9
say a/2;             # => 4

var b = (a - 3);     # b is of type `MyInt`
say b;               # => 6

b.is_a(MyInt)     || die "error!";
MyInt.is_a(a)     || die "error!";

say a.to_hex;        # => "9" -- an hexadecimal string

a.to_hex == "9"   || die "error!";
b == 6            || die "error!";
a == MyInt(9)     || die "error!";
a == 9            || die "error!";
MyInt(10) == a+1  || die "error!";

a -= 7;
a+b == 8         || die "error!";
MyInt(8) == a+b  || die "error!";

b.of {'a'} == (['a'] * b) || die "error!";
