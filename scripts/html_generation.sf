#!/usr/bin/ruby

#
## HTML generation example, featuring method multiple dispatch
#

class HTML {
    method _attr(h) { h.keys.sort.map {|k| %Q( #{k}="#{h[k]}") }.join('') };

    method br                 { '<br/>' };
    method a(h is Hash, name) { '<a' + self._attr(h) + ">#{name}</a>" };

    method ol(h is Hash, *a) { '<ol' + self._attr(h) + '>' + a.join('') + '</ol>' };
    method ol(*a)            { self.ol(:(), a...) };

    method ul(h is Hash, *a) { '<ul' + self._attr(h) + '>' + a.join('') + '</ul>' };
    method ul(*a)            { self.ul(:(), a...) };

    method li (h is Hash, name) { '<li' + self._attr(h) + ">#{name}</li>" };
    method li (name)            { self.li(:(), name) };
}

var html = HTML.new;

var str = join("\n",
    html.a(
        :(href => 'http://www.google.com', target => '_blank'),
        'Click here!',
    ),
    html.ol(
        html.li('one'),
        html.li('two'),
    ),
    html.ul(
        :(class => 'myList'),
        html.li('Sidef'),
        html.li('Perl'),
    ),
);

say str;

str == <<'HTML'.chomp || die 'Error!';
<a href="http://www.google.com" target="_blank">Click here!</a>
<ol><li>one</li><li>two</li></ol>
<ul class="myList"><li>Sidef</li><li>Perl</li></ul>
HTML
