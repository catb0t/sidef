#!/usr/bin/ruby

# Translation of: http://rosettacode.org/wiki/Align_columns#Go

class Format(text, width) {
    method output(j) {
        self.text.each { |row|
            row.pairs.each { |i, word|
                '%-*s '.printf(self.width[i],
                    '%*s' % (word.len + (self.width[i]-word.len * j/2), word)
                );
            };
            ''.say;
        };
        ''.say;
    }
}

class Formatter(input) {
    method new {
        var textArr = [];
        var widthArr = [];

        self.input.each_line {
            var words = .split('$');
            textArr.append(words);

            words.pairs.each { |i, word|
                if (i == widthArr.len) {
                    widthArr.append(word.len);
                }
                elsif (word.len > widthArr[i]) {
                    widthArr[i] = word.len;
                }
            }
        }

        return Format(textArr, widthArr);
    }
}

{
    enum |left, middle, right|;
    const text = <<'EOT';
Given$a$text$file$of$many$lines,$where$fields$within$a$line$
are$delineated$by$a$single$'dollar'$character,$write$a$program
that$aligns$each$column$of$fields$by$ensuring$that$words$in$each$
column$are$separated$by$at$least$one$space.
Further,$allow$for$each$word$in$a$column$to$be$either$left$
justified,$right$justified,$or$center$justified$within$its$column.
EOT

    var f = Formatter(text);

    f.output(left);
    f.output(middle);
    f.output(right);
}.exec;
