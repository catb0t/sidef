#!/usr/bin/ruby

assert_eq(
    gather {
        for i,j (1..2 ~X 1..2, 5..7 ~X 5..7, [3,4,5]) { take([i,j]) }
    },
    [[1, 1],[1, 2],[2, 1],[2, 2],[5, 5],[5, 6],[5, 7],[6, 5],[6, 6],[6, 7],[7, 5],[7, 6],[7, 7],[3, nil],[4, nil],[5, nil]]
)

assert_eq(
    gather {
        for i,j (1..2 ~X 1..2, 5..7 ~X 5..7, [3,4,5]) { take([i,j]); break }
    },
    [[1,1]]
);

assert_eq(
    gather {
        for i (1..3, 5..7) { take(i) }
    },
    [1,2,3,5,6,7]
)

assert_eq(
    gather {
        for i (1..3, 5..7) { take(i); break }
    },
    [1]
)

assert_eq(
    gather {
        for i (1..3, 5..7) { take(i); i == 2 && break }
    },
    [1,2]
)

assert_eq(
    gather {
        for i (1..3, 5..7) {
            take(i);
            i == 2 && next;
            i == 3 && break
        }
    },
    [1,2,3]
)

assert_eq(
    gather {
        for i (1..3, [5,6,7]) {
            take(i);
            i == 2 && next;
            i == 6 && break
        }
    },
    [1,2,3,5,6]
)


assert_eq(
    gather {
        for i (1..3, [5,6,7]) {
            i == 1 && next;
            i == 5 && next;
            take(i);
            i == 2 && next;
            i == 6 && break
        }
    },
    [2,3,6]
)

assert_eq(
    gather {
        for i (1..3, [5,6,7]) {
            i == 3 && break
            take(i);
        }
    },
    [1,2]
)

assert_eq(
    gather {
        for i (1..3, [5,6,7]) {
            i == 5 && next
            i == 3 && next
            take(i);
        }
    },
    [1,2,6,7]
)

assert_eq(
    gather {
        for i ([5,6,7], 1..3) {
            i == 5 && next;
            take(i);
            i == 2 && break;
        }
    },
    [6,7,1,2]
)

say "** Test passed!"
