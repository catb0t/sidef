#!/usr/bin/ruby

20.times {

    var n = 100.irand
    var x = 100.irand

    assert_eq(sum(0..n, {|k| binomial(n, k) * (n-k == 1 ? -1/2 : bernoulli(n-k)) * x**k}), bernoulli(n, x), "error for bernoulli(#{n}, #{x})")
    assert_eq(2**n * (2**(n+1) / (n+1)) * (bernoulli(n+1, 3/4) - bernoulli(n+1, 1/4)), euler_number(n), "error for euler_number(#{n})")
}

assert_eq(10.of { euler_number(_) }, [1, 0, -1, 0, 5, 0, -61, 0, 1385, 0])

assert_eq(euler_number(18), -2404879675441)
assert_eq(euler_number(20), 370371188237525)
