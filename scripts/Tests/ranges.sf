#!/usr/bin/ruby

var r = range(101, -Inf, -2)

assert(!r.contains(30))
assert(!r.contains(2))

r = range(100, -Inf, -2)

assert(r.contains(30))
assert(r.contains(2))

r = range(20, -Inf, -2)

assert(!r.contains(30))
assert(!r.contains(5))
assert(r.contains(2))

r = range(100, -Inf, 2)

assert(!r.contains(30))
assert(!r.contains(2))

r = range(-3, Inf, 2)

assert(!r.contains(30))
assert(!r.contains(2))

r = range(-100, Inf, 2)

assert(r.contains(30))
assert(r.contains(2))
assert(r.contains(132438))

r = range(-3, Inf, 2)

assert(!r.contains(30))
assert(!r.contains(2))
assert(r.contains(5))
assert(r.contains(-3))
assert(!r.contains(-9))

r = range(100, -Inf, -3)

assert(!r.contains(103))
assert(r.contains(73))
assert(r.contains(-531341))
assert(!r.contains(-100))
assert(r.contains(100))

r = (1..100 -> by(0.5))

assert(r.contains(45))
assert(!r.contains(101))
assert(r.contains(100))
assert(!r.contains(0))
assert(r.contains(1))
assert(r.contains(1.5))
assert(!r.contains(1.05))
assert(r.contains(45.5))
assert(!r.contains(45.6))
assert(!r.contains(45.51))
assert(r.contains(2))
assert(r.contains(99.5))
assert(!r.contains(99.9999))

assert_eq('a'..'z' -> first, 'a')
assert_eq('a'..'z' -> first(3), ['a', 'b', 'c'])

assert_eq(1..5   -> first(57), [1,2,3,4,5])
assert_eq(3..10  -> first, 3)
assert_eq(1..5   -> first(0), [])
assert_eq(1..13  -> first(1), [1])
assert_eq(1..1e9 -> first(-3), [])
assert_eq(1..10  -> reverse.first(2), [10, 9])
assert_eq(1..10  -> by(2).first(3), [1, 3, 5])
assert_eq(-5..10 -> first(8), [-5, -4, -3, -2, -1, 0, 1, 2])

assert_eq(1..10  -> last(3), [8, 9, 10])
assert_eq(-1e9..1e9 -> last(3), [1e9 - 2, 1e9-1, 1e9])
assert_eq('a'..'z' -> last(3), ['x', 'y', 'z'])
assert_eq(1..5 -> last(100), [1,2,3,4,5])
assert_eq(1..5 -> last(-1), [])
assert_eq(1..3 -> last(0), [])
assert_eq(1..17 -> last(1), [17])
assert_eq(1..23 -> last, 23)

say "** Test passed!";
