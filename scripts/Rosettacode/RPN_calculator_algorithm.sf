#!/usr/bin/ruby

#
## http://rosettacode.org/wiki/Parsing/RPN_calculator_algorithm
#

var proggie = '3 4 2 * 1 5 - 2 3 ^ ^ / +';

class RPN {
    def arr = [];

    -> binop(op) {
        var x = arr.pop;
        var y = arr.pop;
        arr << y.(op)(x);
    };

    -> run(p) {
        p.each_word { |w|
            say "#{w} (#{arr})";
            given(w)
              ~ /\d/         { arr << w.to_f }
              ~ %w(+ - * /)  { self.binop(w) }
              > '^'          { self.binop('**') }
              :              { die "#{w} is bogus" }
            ;
        };
        say arr[0];
        assert_eq(arr[0], 3.0001220703125);
    };
}

RPN.new.run(proggie);
