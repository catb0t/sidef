#!/usr/bin/ruby

#
## http://rosettacode.org/wiki/Sorting_algorithms/Strand_sort
#

func merge(x, y) {
    var out = [];
    while (x && y) {
        given (x[-1] <=> y[-1])
            > ( 1) { out.prepend(x.pop) }
            > (-1) { out.prepend(y.pop) }
            :      { out.prepend(x.pop, y.pop) }
    };
    x + y + out;
}

func strand(x) {
    x || return [];
    var out = [x.shift];
    if (x.len) {
        range(-x.len, -1).each { |i|
            if (x[i] >= out[-1]) {
                out.append(x.pop_at(i));
            }
        }
    };
    out;
}

func strand_sort(x) {
    var out = [];
    while (var strd = strand(x)) {
        out = merge(out, strd);
    };
    out;
}

var a = 10.of {100.rand.int};
say "Before: #{a}";

var new = strand_sort(a.copy);
say "After: #{new}";

assert_eq(a.sort, new);
