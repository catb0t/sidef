#!/usr/bin/ruby

class FIFO(*array) {
    method pop {
        self.empty && die "underflow";
        self[:array].shift;
    };
    method push(*items) {
        self[:array] += items;
        self;
    };
    method empty {
        self[:array].len == 0;
    };
};

var f1 = FIFO();
var f2 = FIFO();

f1.push('a');
f2.push('b');

f1[:array] == %w(a) || die '1-f1';
f2[:array] == %w(b) || die '1-f2';

f1.push('a');
f2.push('b');

f1[:array] == %w(a a) || die '2-f1';
f2[:array] == %w(b b) || die '2-f2';

f1.pop;
f2.pop;

f1[:array] == %w(a) || die '3-f1';
f2[:array] == %w(b) || die '3-f2';

var f = FIFO();
f.empty   == true        || die '1-f';
f.push('foo');
f.push('bar', 'baz');
f.pop     == 'foo'       || die '2-f';
f[:array] == %w(bar baz) || die '3-f';

var g = FIFO('xxx', 'yyy');
g.pop     == 'xxx'       || die '1-g';
f.pop     == 'bar'       || die '4-f';
g[:array] == ['yyy']     || die '2-g';

#
## Class redefinition
#
class Example {
    method hi {
        say "I'm saying 'hi'";
    }
}

class main::Example() {             # main::Example() is just for testing
    method hello() {
        say "I'm saying 'hello'";
    }
}

var obj = Example();

obj.hi;
obj.hello;

say "** Test passed!";

__END__

#
## The code from bellow is old and needs to be corrected!
#

class Math;

var public_var  = "This is a public class variable!";
    private_var = "This is a private class variable!";

private_var != nil
    || ("Private var fail!\n".die);

func solve (x, y) {
    x * y
}

#
## Function calls for Math::solve()
#

solve(4, 5) == 20
    || ("Class call fail!\n".die);

Math::solve(5, 9) == 45
    || ("Class call fail! (2)\n".die);

#
## Declaration of the main class
#

class main;

func solve (x, y) {
    x + y
}

#
## Testing the public variable
#

Math::public_var != nil
    || ("public_var is not public!\n".die);

#
## Testing the private variable
#

Math::private_var == nil
    || ("private_var is not private!\n".die);

#
## Testing the Math::solve() function
#

Math::solve(3, 4) == 12
    || ("Math::solve error!\n".die);

#
## Testing the main::solve() function
#

solve(3, 4) == 7
    || ("main::solve error!\n".die);


/*
    Import:
        Math::solve()    -> solve()
        Math::public_var -> public_var
*/

import(Math::solve, Math::public_var);

solve(8, 6) == 48
    || ("import failed!\n".die);

public_var != nil
    || ("import failed! (2)".die);

#
## Everything is OK
#

"All tests passed!".say;
