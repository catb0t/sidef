#!/usr/bin/ruby

func exp(n) {
    var p = 1;
    var r = (1 + n/1e4);
    { p *= r } * 1e4;
    return p;
}

func ln(z) {
    var sum = 0;

    var r = (z-1 / z+1);
    var p = r;

    var f = -1;
    var eps = 1e-16;

    {
        sum += (p / (f += 2));
        p *= r;
        p *= r;
        p <= eps && break;
    } * 1e4;

    return 2*sum;
}

func pow(b, p) {
    exp(ln(b) * p);
}

func nth_root(n, p) {
    exp(ln(p) / n);
}


#
## Testing
#

func display(a, b, label) {
    printf("%-20s%s -> %s\n", label, a, b);
}

display(pow(2, 3), 2**3, '2^3');
display(pow(2.4, 3.85), 2.4**3.85, '2.4^3.85');

display(nth_root(3, 125), 125.root(3), 'root(3, 125)');
display(nth_root(9.82, 6572.23), 6572.23.root(9.82), 'root(9.82, 6572.23)');
