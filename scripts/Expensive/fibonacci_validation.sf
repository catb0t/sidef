#!/usr/bin/ruby

var S = Math.sqrt(1.25)+0.5;
var T = Math.sqrt(1.25)-0.5;

func fib(n) {
    Math.pow(S, n) - Math.pow(-T, n) / S+T -> roundf(0);
}

func is_fib (i, fib) {
    (((fib * S+T) + Math.pow(-T, i)).log(S) -> round(i)) == i;
}

#
## log(n*sqrt(5) + (((1-sqrt(5))/2) ^ ((log(n)+(log(5))/2) / (log(1+sqrt(5))-log(2))))) / (log(1+sqrt(5))-log(2))
#
func fib_pos(n) {
    (Math.log((S+T)*n + ((0.5 * (1-(S+T)))**((Math.log(n) + (Math.log(5)/2)) / (Math.log(1+(S+T))-Math.log(2)))))) /
                                (Math.log(1+(S+T))-Math.log(2)) -> floor;
}

#
## (log(n*sqrt(5) + (((1-sqrt(5))/2) ^ (log(n * sqrt(5)) / log((1+sqrt(5))/2))))) / log((1+sqrt(5))/2)
#
func fib_position(n) {
    ((n * S+T) + Math.pow(-T, (((n * S+T)).log(S)))).log(S) -> floor;
}

func is_prob_fib(n) {
    fib(fib_pos(n)) == n;
}

for [
      [12,  144,                   true],
      [12,  143,                   false],
      [12,  145,                   false],
      [13,  233,                   true],
      [49,  1337,                  false],
      [32,  2178309,               true],
      [100, 354224848179261915075, true],
    ]{|pos,             num,            bool|

    is_fib(pos, num) == bool || die "Validation error (1)!";
    is_prob_fib(num) == bool || die "Validation error (2)!";

    fib_pos(num) == fib_position(num) || die "pos error";

    "%21s is on position %3s in the fibonacci sequence: %s\n"
        -> printf(num, pos, bool);
}
