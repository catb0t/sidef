#!/usr/bin/ruby

#
## Creating an hash of hashes
#

var hash = (Hash.new.map(
       ["name", "age"],
[
    1, ["John",    23],
    2, ["Call",    42],
    3, ["Carl",    19]
]));

hash[1]["name"].say;     # prints "John"
hash[2]["name"].say;     # prints "Call"


#
## Mapping more keys and values into an hash of hashes
#

hash.map(
       ["address",                      "phone"],
[
    1, ["London, Avenue Street 23", "+00123002"],
    2, ["Cambridge, LightHouse 12", "+91293422"]
]
);

"%s lives on: %s\n".printf(hash[2]["name"], hash[2]["address"]);
"%s lives on: %s\n".printf(hash[1]["name"], hash[1]["address"]);

#
## Working with an individual user
#

'-' * 80 say;

var call_info = hash[2];
call_info["job"]     = "Scientist";
call_info["address"] = "London, Main Street 142";

var call_keys = (hash[2].keys);
var call_values = (hash[2].values);

{
    "%-8s: %s\n".printf(call_keys[_], call_values[_]);
}
->for (0..(call_keys.len-1));

'-' * 80 say;

#
## Creating a simple hash:
#

var new_hash = (Hash.new(
   "google", "www.google.com",
   "bing",   "www.bing.com"
));

new_hash["google"].say;


#
## Assigning a new key and value
#

new_hash["yahoo"] = "www.yahoo.com";
new_hash["yahoo"].say;

"HASH Keys: %s\n".printf(new_hash.keys.join(", "));
"HASH Values: %s\n".printf(new_hash.values.join(", "));
