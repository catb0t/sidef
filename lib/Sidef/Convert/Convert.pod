
=encoding utf8

=head1 NAME

Sidef::Convert::Convert

=head1 DESCRIPTION

This module helps with the conversion between object types.

=head1 SYNOPSIS

This module can only be used as a parent:

        our @ISA = qw(Sidef::Convert::Convert);

or

        use parent qw(Sidef::Convert::Convert);


=head1 INHERITS

Inherits methods from:

    * Sidef

=head1 METHODS

=head2 toArray

Obj.toArray() -> I<Array>

Convert the self object into an array.

    "str".toArray  =>  ["str"]

Aliases: I<to_array()>.

Returns an object of type: C<Sidef::Types::Array::Array>

=cut

=head2 toBool

Obj.toBool() -> I<Bool>

Convert the self object into a boolean value.

      1.toBool   =>   true
    "0".toBool   =>   false

Aliases: I<to_bool()>.

Returns an object of type: C<Sidef::Types::Bool::Bool>

=cut

=head2 toByte

Obj.toByte() -> I<Byte>

Convert the self object into a numeric byte value.

    "a".toByte   =>   97

Aliases: I<to_byte()>.

Returns an object of type: C<Sidef::Types::Byte::Byte>

=cut

=head2 toBytes

Obj.toBytes() -> I<Bytes>

Convert the self object into an array of bytes,

    "abc".toBytes  =>  [97, 98, 99]

Aliases: I<to_bytes()>.

Returns an object of type: C<Sidef::Types::Byte::Bytes>

=cut

=head2 toChar

Obj.toChar() -> I<Char>

Convert the self object into a character object.

        4.toChar   =>   "4"
    "xyz".toChar   =>   "x"

Aliases: I<to_char()>.

Returns an object of type: C<Sidef::Types::Char::Char>

=cut

=head2 toChars

Obj.toChars() -> I<Chars>

Convert the self object into an array of characters.

    "abc".toChars   => ['a', 'b', 'c']

Aliases: I<to_chars()>.

Returns an object of type: C<Sidef::Types::Char::Chars>

=cut

=head2 toDir

Obj.toDir() -> I<Dir>

Convert the self object into a directory type-object.

    '/my/dir'.toDir  =>  qd(/my/dir)

Aliases: I<to_dir()>.

Returns an object of type: C<Sidef::Types::Glob::Dir>

=cut

=head2 toFile

Obj.toFile() -> I<File>

Convert the self object into a file type-object.

    '/my/file'.toFile  =>  qf(/my/file)

Aliases: I<to_file()>.

Returns an object of type: C<Sidef::Types::Glob::File>

=cut

=head2 to_i

Obj.to_i() -> I<Num>

Convert the self object into an integer.

    "12.34".to_i  =>  12
    332.999.to_i  =>  332

Aliases: I<toInt()>, I<to_int()>, I<toInteger()>, I<to_integer()>.

Returns an object of type: C<Sidef::Types::Number::Number>

=cut

=head2 toNum

Obj.toNum() -> I<Num>

Convert the self object into a number type-object.

    "12.34".toNum  =>  12.34
      12.34.toNum  =>  12.34

Aliases: I<to_num()>.

Returns an object of type: C<Sidef::Types::Number::Number>

=cut

=head2 toRegex

Convert.toRegex() -> I<Bool>

Aliases: I<to_re()>, I<to_regex()>, I<toRe()>.

Return the

=cut

=head2 toString

Obj.toString() -> I<String>

Convert the self object into a string type-object.

When the self object is an array-like object,
its elements will be joined one-level deep with a space character.

         42.toString  => '42'
    [1,2,3].toString  => '1 2 3'

Aliases: I<to_s()>, I<to_str()>, I<to_string()>, I<toStr()>.

Returns an object of type: C<Sidef::Types::String::String>

=cut
