
=encoding utf8

=head1 NAME

Sidef::Convert::Convert

=head1 DESCRIPTION

This module helps with the conversion between object types.

=head1 SYNOPSIS

This module can only be used as a parent:

        our @ISA = qw(Sidef::Convert::Convert);

or

        use parent qw(Sidef::Convert::Convert);


=head1 INHERITS

Inherits methods from:

    * Sidef

=head1 METHODS

=head2 toArray

Obj.toArray() -> I<Array>

Convert the self object into an array.

    "str".toArray  =>  ["str"]

Returns an object of type: I<Sidef::Types::Array::Array>

=cut

=head2 toBool

Obj.toBool() -> I<Bool>

Convert the self object into a boolean value.

      1.toBool   =>   true
    "0".toBool   =>   false

Returns an object of type: I<Sidef::Types::Bool::Bool>

=cut

=head2 toByte

Obj.toByte() -> I<Byte>

Convert the self object into a numeric byte value.

    "a".toByte   =>   97

Returns an object of type: I<Sidef::Types::Byte::Byte>

=cut

=head2 toBytes

Obj.toBytes() -> I<Bytes>

Convert the self object into an array of bytes,

    "abc".toBytes  =>  [97, 98, 99]

Returns an object of type: I<Sidef::Types::Byte::Bytes>

=cut

=head2 toChar

Obj.toChar() -> I<Char>

Convert the self object into a character object.

        4.toChar   =>   "4"
    "xyz".toChar   =>   "x"


Returns an object of type: I<Sidef::Types::Char::Char>

=cut

=head2 toChars

Obj.toChars() -> I<Chars>

Convert the self object into an array of characters.

    "abc".toChars   => ['a', 'b', 'c']

Returns an object of type: I<Sidef::Types::Char::Chars>

=cut

=head2 toDir

Obj.toDir() -> I<Dir>

Convert the self object into a directory type-object.

    '/my/dir'.toDir  =>  qd(/my/dir)

Returns an object of type: I<Sidef::Types::Glob::Dir>

=cut

=head2 toFile

Obj.toFile() -> I<File>

Convert the self object into a file type-object.

    '/my/file'.toFile  =>  qf(/my/file)

Returns an object of type: I<Sidef::Types::Glob::File>

=cut

=head2 toInt

Obj.toInt() -> I<Num>

Convert the self object into an integer.

    "12.34".toInt  =>  12

Returns an object of type: I<Sidef::Types::Number::Number>

=cut

=head2 toInteger

Alias for L<I<toInt()>|"toInt">.

=cut

=head2 toNum

Obj.toNum() -> I<Num>

Convert the self object into a number type-object.

    "12.34".toNum  =>  12.34

Returns an object of type: I<Sidef::Types::Number::Number>

=cut

=head2 toString

Obj.toString() -> I<String>

Convert the self object into a string type-object.

When the self object is an array-like object,
its elements will be joined one-level deep with a space character.

         42.toString  => '42'
    [1,2,3].toString  => '1 2 3'

Returns an object of type: I<Sidef::Types::String::String>

=cut

=head2 to_array

Alias for L<I<toArray()>|"toArray">.

=cut

=head2 to_bool

Alias for L<I<toBool()>|"toBool">.

=cut

=head2 to_byte

Alias for L<I<toByte()>|"toByte">.

=cut

=head2 to_bytes

Alias for L<I<toBytes()>|"toBytes">.

=cut

=head2 to_char

Alias for L<I<toChar()>|"toChar">.

=cut

=head2 to_chars

Alias for L<I<toChars()>|"toChars">.

=cut

=head2 to_dir

Alias for L<I<toDir()>|"toDir">.

=cut

=head2 to_file

Alias for L<I<toFile()>|"toFile">.

=cut

=head2 to_i

Alias for L<I<toInt()>|"toInt">.

=cut

=head2 to_int

Alias for L<I<toInt()>|"toInt">.

=cut

=head2 to_integer

Alias for L<I<toInt()>|"toInt">.

=cut

=head2 to_num

Alias for L<I<toNum()>|"toNum">.

=cut

=head2 to_s

Alias for L<I<toString()>|"toString">.

=cut

=head2 to_string

Alias for L<I<toString()>|"toString">.

=cut
