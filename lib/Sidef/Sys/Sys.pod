
=encoding utf8

=head1 NAME

Sidef::Sys::Sys

=head1 DESCRIPTION

This object provides some methods related to the Sidef working system.

=head1 SYNOPSIS

    Sys.method(arg)

=head1 METHODS

=head2 alarm

Sys.alarm() -> I<Bool>

Return the

=cut

=head2 die

Sys.die() -> I<Bool>

Return the

=cut

=head2 eval

Sys.eval() -> I<Bool>

Return the

=cut

=head2 exec

Sys.exec() -> I<Bool>

Return the

=cut


=head2 exit

Sys.exit(I<Number>)

Exit the main program with a given code. If no argument is specified, the code 0 (SUCCESS) is assumed.

    Sys.exit(0)     # exit with success
    Sys.exit(-1)    # exit with some error

=cut

=head2 nanoSleep

Sys.nanoSleep() -> I<Bool>

Return the

=cut

=head2 nanosleep

Sys.nanosleep() -> I<Bool>

Return the

=cut

=head2 open

Sys.open() -> I<Bool>

Return the

=cut

=head2 opendir

Sys.opendir() -> I<Bool>

Return the

=cut

=head2 osName

Sys.osName() -> I<String>

Return the name of the current operating system under which Sidef is running.

    Sys.osName    # 'linux'   under Linux
                  # 'MSWin32' under Windows

Aliases: I<osname()>.

Returns an object of type: C<Sidef::Types::String::String>

=cut

=head2 print

Sys.print(I<obj1>, I<obj2>, I<...>) -> I<Bool>

Print a list of argument to the standard output (STDOUT). Returns true on success.

    Sys.print("hello", "-", "world");

Returns an object of type: C<Sidef::Types::Bool::Bool>

=cut

=head2 printf

Sys.printf() -> I<Bool>

Return the

=cut

=head2 printh

Sys.printh(I<handle>, I<obj1>, I<obj2>, I<...>) -> I<Bool>

Print a list of argument into a handle object. The handle object can be of type GLOB or anyother handle which has the I<print> method. Returns true on success.

    Sys.printh(STDERR, "This is a warning!\n");

Returns an object of type: C<Sidef::Types::Bool::Bool>

=cut

=head2 println

Sys.println(I<obj1>, I<obj2>, I<...>) -> I<Bool>

Just like L<C<print()>|"print">, but implicitly appends a newline. Returns true on success.

    Sys.println("Goodbye, World!");

Returns an object of type: C<Sidef::Types::Bool::Bool>

=cut

=head2 ref

Sys.ref() -> I<Bool>

Return the

=cut

=head2 run

Sys.run() -> I<Bool>

Return the

=cut

=head2 say

Sys.say() -> I<Bool>

Return the

=cut

=head2 scanln

Sys.scanln() -> I<Bool>

Return the

=cut

=head2 sidef

Sys.sidef() -> I<String>

Return the full path of the 'sidef' main program.

    Sys.sidef   # under Linux, normally is '/usr/bin/sidef'

Returns an object of type: C<Sidef::Types::String::String>

=cut

=head2 sleep

Sys.sleep() -> I<Bool>

Return the

=cut

=head2 system

Sys.system() -> I<Bool>

Return the

=cut

=head2 ualarm

Sys.ualarm() -> I<Bool>

Return the

=cut

=head2 umask

Sys.umask() -> I<Bool>

Return the

=cut

=head2 user

Sys.user() -> I<Bool>

Return the

=cut

=head2 usleep

Sys.usleep() -> I<Bool>

Return the

=cut

=head2 warn

Sys.warn() -> I<Bool>

Return the

=cut
