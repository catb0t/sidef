
=encoding utf8

=head1 NAME

Sidef::Types::Glob::FileHandle

=head1 DESCRIPTION

This object is ...

=head1 SYNOPSIS

var obj = FileHandle.new(...);


=head1 INHERITS

Inherits methods from:

	* Sidef::Object::Object

=head1 METHODS


=head2 <<

I<Obj> B<E<lt>E<lt>> I<Obj> -> I<Obj>

Return the

Aliases: I<output_from>, I<outputFrom>

=cut

=head2 <=>

I<Obj> B<E<lt>=E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<cmp>, I<compare>

=cut

=head2 >>

I<Obj> B<E<gt>E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<read_to>, I<readTo>

=cut

=head2 autoflush

FileHandle.autoflush() -> I<Obj>

Return the

=cut

=head2 binmode

FileHandle.binmode() -> I<Obj>

Return the

=cut

=head2 close

FileHandle.close() -> I<Obj>

Return the

=cut

=head2 cp

FileHandle.cp() -> I<Obj>

Return the

Aliases: I<copy>

=cut

=head2 each

FileHandle.each() -> I<Obj>

Return the

Aliases: I<each_line>

=cut

=head2 eof

FileHandle.eof() -> I<Obj>

Return the

=cut

=head2 file

FileHandle.file() -> I<Obj>

Return the

Aliases: I<parent>

=cut

=head2 fileno

FileHandle.fileno() -> I<Obj>

Return the

=cut

=head2 flock

FileHandle.flock() -> I<Obj>

Return the

=cut

=head2 get

FileHandle.get() -> I<Obj>

Return the

Aliases: I<line>, I<readln>, I<get_line>, I<getline>, I<getLine>, I<read_line>, I<readline>, I<readLine>

=cut

=head2 getc

FileHandle.getc() -> I<Obj>

Return the

Aliases: I<get_char>, I<getChar>, I<read_char>, I<readChar>

=cut

=head2 is_on_tty

FileHandle.is_on_tty() -> I<Obj>

Return the

Aliases: I<isOnTty>

=cut

=head2 lines

FileHandle.lines() -> I<Obj>

Return the

Aliases: I<read_all>, I<readall>, I<readAll>, I<get_lines>, I<getlines>, I<getLines>, I<readlines>, I<readLines>

=cut

=head2 lock

FileHandle.lock() -> I<Obj>

Return the

=cut

=head2 lstat

FileHandle.lstat() -> I<Obj>

Return the

=cut

=head2 print

FileHandle.print() -> I<Obj>

Return the

Aliases: I<spurt>, I<write>

=cut

=head2 read

FileHandle.read() -> I<Obj>

Return the

=cut

=head2 say

FileHandle.say() -> I<Obj>

Return the

Aliases: I<println>

=cut

=head2 seek

FileHandle.seek() -> I<Obj>

Return the

=cut

=head2 sep

FileHandle.sep() -> I<Obj>

Return the

Aliases: I<separator>, I<input_separator>, I<inputSeparator>

=cut

=head2 slurp

FileHandle.slurp() -> I<Obj>

Return the

=cut

=head2 stat

FileHandle.stat() -> I<Obj>

Return the

=cut

=head2 stderr

FileHandle.stderr() -> I<Obj>

Return the

=cut

=head2 stdin

FileHandle.stdin() -> I<Obj>

Return the

=cut

=head2 stdout

FileHandle.stdout() -> I<Obj>

Return the

=cut

=head2 sysread

FileHandle.sysread() -> I<Obj>

Return the

Aliases: I<sysRead>

=cut

=head2 sysseek

FileHandle.sysseek() -> I<Obj>

Return the

Aliases: I<sysSeek>

=cut

=head2 tell

FileHandle.tell() -> I<Obj>

Return the

=cut

=head2 truncate

FileHandle.truncate() -> I<Obj>

Return the

=cut

=head2 unlock

FileHandle.unlock() -> I<Obj>

Return the

=cut

=head2 words

FileHandle.words() -> I<Obj>

Return the

=cut

=head2 write_string

FileHandle.write_string() -> I<Obj>

Return the

Aliases: I<writeString>

=cut
