
=encoding utf8

=head1 NAME

Sidef::Types::Number::Number

=head1 DESCRIPTION

This object is ...

=head1 SYNOPSIS

var obj = Number.new(...);


=head1 INHERITS

Inherits methods from:

	* Sidef::Object::Object
	* Sidef::Convert::Convert

=head1 METHODS


=head2 !

I<Obj> B<!> I<Obj> -> I<Obj>

Return the

Aliases: I<fac>, I<factorial>

=cut

=head2 %

I<Obj> B<%> I<Obj> -> I<Obj>

Return the

Aliases: I<mod>

=cut

=head2 %%

I<Obj> B<%%> I<Obj> -> I<Obj>

Return the

Aliases: I<is_div>

=cut

=head2 &

I<Obj> B<&> I<Obj> -> I<Obj>

Return the

Aliases: I<and>

=cut

=head2 *

I<Obj> B<*> I<Obj> -> I<Obj>

Return the

Aliases: I<mul>

=cut

=head2 **

I<Obj> B<**> I<Obj> -> I<Obj>

Return the

Aliases: I<pow>

=cut

=head2 +

I<Obj> B<+> I<Obj> -> I<Obj>

Return the

Aliases: I<add>

=cut

=head2 ++

I<Obj> B<++> I<Obj> -> I<Obj>

Return the

Aliases: I<inc>

=cut

=head2 -

I<Obj> B<-> I<Obj> -> I<Obj>

Return the

Aliases: I<sub>

=cut

=head2 --

I<Obj> B<--> I<Obj> -> I<Obj>

Return the

Aliases: I<dec>

=cut

=head2 ..

I<Obj> B<..> I<Obj> -> I<Obj>

Return the

Aliases: I<arr_to>, I<array_to>

=cut

=head2 /

I<Obj> B</> I<Obj> -> I<Obj>

Return the

Aliases: I<÷()>, I<div>, I<rdiv>

=cut

=head2 //

I<Obj> B<//> I<Obj> -> I<Obj>

Return the

Aliases: I<idiv>

=cut

=head2 :

I<Obj> B<:> I<Obj> -> I<Obj>

Return the

Aliases: I<c>, I<complex>

=cut

=head2 <

I<Obj> B<E<lt>> I<Obj> -> I<Obj>

Return the

Aliases: I<lt>

=cut

=head2 <<

I<Obj> B<E<lt>E<lt>> I<Obj> -> I<Obj>

Return the

Aliases: I<shift_left>

=cut

=head2 <=>

I<Obj> B<E<lt>=E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<cmp>

=cut

=head2 ==

I<Obj> B<==> I<Obj> -> I<Obj>

Return the

Aliases: I<eq>

=cut

=head2 >

I<Obj> B<E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<gt>

=cut

=head2 >>

I<Obj> B<E<gt>E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<shift_right>

=cut

=head2 ^

I<Obj> B<^> I<Obj> -> I<Obj>

Return the

Aliases: I<xor>

=cut

=head2 ^..

I<Obj> B<^..> I<Obj> -> I<Obj>

Return the

Aliases: I<downto>

=cut

=head2 abs

Number.abs() -> I<Obj>

Return the

Aliases: I<pos>, I<positive>

=cut

=head2 acmp

Number.acmp() -> I<Obj>

Return the

=cut

=head2 acos

Number.acos() -> I<Obj>

Return the

=cut

=head2 acosh

Number.acosh() -> I<Obj>

Return the

=cut

=head2 acot

Number.acot() -> I<Obj>

Return the

=cut

=head2 acoth

Number.acoth() -> I<Obj>

Return the

=cut

=head2 acsc

Number.acsc() -> I<Obj>

Return the

=cut

=head2 acsch

Number.acsch() -> I<Obj>

Return the

=cut

=head2 agm

Number.agm() -> I<Obj>

Return the

=cut

=head2 arr_downto

Number.arr_downto() -> I<Obj>

Return the

Aliases: I<array_downto>

=cut

=head2 as_bin

Number.as_bin() -> I<Obj>

Return the

=cut

=head2 asec

Number.asec() -> I<Obj>

Return the

=cut

=head2 asech

Number.asech() -> I<Obj>

Return the

=cut

=head2 as_hex

Number.as_hex() -> I<Obj>

Return the

=cut

=head2 asin

Number.asin() -> I<Obj>

Return the

=cut

=head2 asinh

Number.asinh() -> I<Obj>

Return the

=cut

=head2 as_oct

Number.as_oct() -> I<Obj>

Return the

=cut

=head2 atan

Number.atan() -> I<Obj>

Return the

=cut

=head2 atan2

Number.atan2() -> I<Obj>

Return the

=cut

=head2 atanh

Number.atanh() -> I<Obj>

Return the

=cut

=head2 base

Number.base() -> I<Obj>

Return the

Aliases: I<in_base>

=cut

=head2 cbrt

Number.cbrt() -> I<Obj>

Return the

=cut

=head2 ceil

Number.ceil() -> I<Obj>

Return the

=cut

=head2 chr

Number.chr() -> I<Obj>

Return the

=cut

=head2 commify

Number.commify() -> I<Obj>

Return the

=cut

=head2 cos

Number.cos() -> I<Obj>

Return the

=cut

=head2 cosh

Number.cosh() -> I<Obj>

Return the

=cut

=head2 cot

Number.cot() -> I<Obj>

Return the

=cut

=head2 coth

Number.coth() -> I<Obj>

Return the

=cut

=head2 csc

Number.csc() -> I<Obj>

Return the

=cut

=head2 csch

Number.csch() -> I<Obj>

Return the

=cut

=head2 de

Number.de() -> I<Obj>

Return the

Aliases: I<denominator>

=cut

=head2 deg2grad

Number.deg2grad() -> I<Obj>

Return the

=cut

=head2 deg2rad

Number.deg2rad() -> I<Obj>

Return the

=cut

=head2 dfac

Number.dfac() -> I<Obj>

Return the

Aliases: I<double_factorial>

=cut

=head2 digamma

Number.digamma() -> I<Obj>

Return the

=cut

=head2 digit

Number.digit() -> I<Obj>

Return the

=cut

=head2 digits

Number.digits() -> I<Obj>

Return the

=cut

=head2 divides

Number.divides() -> I<Obj>

Return the

=cut

=head2 divmod

Number.divmod() -> I<Obj>

Return the

=cut

=head2 dump

Number.dump() -> I<Obj>

Return the

Aliases: I<as_rat>

=cut

=head2 e

Number.e() -> I<Obj>

Return the

=cut

=head2 eint

Number.eint() -> I<Obj>

Return the

=cut

=head2 erf

Number.erf() -> I<Obj>

Return the

=cut

=head2 erfc

Number.erfc() -> I<Obj>

Return the

=cut

=head2 exp

Number.exp() -> I<Obj>

Return the

=cut

=head2 exp10

Number.exp10() -> I<Obj>

Return the

=cut

=head2 exp2

Number.exp2() -> I<Obj>

Return the

=cut

=head2 expmod

Number.expmod() -> I<Obj>

Return the

Aliases: I<modpow>

=cut

=head2 fib

Number.fib() -> I<Obj>

Return the

Aliases: I<fibonacci>

=cut

=head2 float

Number.float() -> I<Obj>

Return the

Aliases: I<as_float>

=cut

=head2 floor

Number.floor() -> I<Obj>

Return the

=cut

=head2 fmod

Number.fmod() -> I<Obj>

Return the

=cut

=head2 gamma

Number.gamma() -> I<Obj>

Return the

=cut

=head2 gcd

Number.gcd() -> I<Obj>

Return the

=cut

=head2 grad2deg

Number.grad2deg() -> I<Obj>

Return the

=cut

=head2 grad2rad

Number.grad2rad() -> I<Obj>

Return the

=cut

=head2 hypot

Number.hypot() -> I<Obj>

Return the

=cut

=head2 i

Number.i() -> I<Obj>

Return the

=cut

=head2 iadd

Number.iadd() -> I<Obj>

Return the

=cut

=head2 imul

Number.imul() -> I<Obj>

Return the

=cut

=head2 inf

Number.inf() -> I<Obj>

Return the

=cut

=head2 int

Number.int() -> I<Obj>

Return the

Aliases: I<as_int>

=cut

=head2 inv

Number.inv() -> I<Obj>

Return the

=cut

=head2 invmod

Number.invmod() -> I<Obj>

Return the

Aliases: I<modinv>

=cut

=head2 irand

Number.irand() -> I<Obj>

Return the

Aliases: I<rand_int>

=cut

=head2 iroot

Number.iroot() -> I<Obj>

Return the

=cut

=head2 is_even

Number.is_even() -> I<Obj>

Return the

=cut

=head2 is_inf

Number.is_inf() -> I<Obj>

Return the

=cut

=head2 is_int

Number.is_int() -> I<Obj>

Return the

=cut

=head2 is_nan

Number.is_nan() -> I<Obj>

Return the

=cut

=head2 is_neg

Number.is_neg() -> I<Obj>

Return the

Aliases: I<is_negative>

=cut

=head2 is_ninf

Number.is_ninf() -> I<Obj>

Return the

=cut

=head2 is_odd

Number.is_odd() -> I<Obj>

Return the

=cut

=head2 is_one

Number.is_one() -> I<Obj>

Return the

=cut

=head2 is_pos

Number.is_pos() -> I<Obj>

Return the

Aliases: I<is_positive>

=cut

=head2 is_pow

Number.is_pow() -> I<Obj>

Return the

Aliases: I<is_power>

=cut

=head2 is_prime

Number.is_prime() -> I<Obj>

Return the

=cut

=head2 isqrt

Number.isqrt() -> I<Obj>

Return the

=cut

=head2 is_real

Number.is_real() -> I<Obj>

Return the

=cut

=head2 is_sqr

Number.is_sqr() -> I<Obj>

Return the

Aliases: I<is_square>

=cut

=head2 isub

Number.isub() -> I<Obj>

Return the

=cut

=head2 is_zero

Number.is_zero() -> I<Obj>

Return the

=cut

=head2 jacobi

Number.jacobi() -> I<Obj>

Return the

=cut

=head2 kronecker

Number.kronecker() -> I<Obj>

Return the

=cut

=head2 lcm

Number.lcm() -> I<Obj>

Return the

=cut

=head2 legendre

Number.legendre() -> I<Obj>

Return the

=cut

=head2 len

Number.len() -> I<Obj>

Return the

Aliases: I<size>, I<length>

=cut

=head2 lgamma

Number.lgamma() -> I<Obj>

Return the

=cut

=head2 li2

Number.li2() -> I<Obj>

Return the

=cut

=head2 ln

Number.ln() -> I<Obj>

Return the

=cut

=head2 ln2

Number.ln2() -> I<Obj>

Return the

=cut

=head2 lngamma

Number.lngamma() -> I<Obj>

Return the

=cut

=head2 log

Number.log() -> I<Obj>

Return the

=cut

=head2 log10

Number.log10() -> I<Obj>

Return the

=cut

=head2 log2

Number.log2() -> I<Obj>

Return the

=cut

=head2 lucas

Number.lucas() -> I<Obj>

Return the

=cut

=head2 max

Number.max() -> I<Obj>

Return the

=cut

=head2 min

Number.min() -> I<Obj>

Return the

=cut

=head2 nan

Number.nan() -> I<Obj>

Return the

=cut

=head2 neg

Number.neg() -> I<Obj>

Return the

Aliases: I<negative>

=cut

=head2 new

Number.new() -> I<Obj>

Return the

Aliases: I<call>

=cut

=head2 next_pow

Number.next_pow() -> I<Obj>

Return the

Aliases: I<next_power>

=cut

=head2 next_pow2

Number.next_pow2() -> I<Obj>

Return the

Aliases: I<next_power2>

=cut

=head2 next_prime

Number.next_prime() -> I<Obj>

Return the

=cut

=head2 ninf

Number.ninf() -> I<Obj>

Return the

=cut

=head2 nok

Number.nok() -> I<Obj>

Return the

Aliases: I<binomial>

=cut

=head2 nu

Number.nu() -> I<Obj>

Return the

Aliases: I<numerator>

=cut

=head2 nude

Number.nude() -> I<Obj>

Return the

Aliases: I<parts>

=cut

=head2 of

Number.of() -> I<Obj>

Return the

=cut

=head2 phi

Number.phi() -> I<Obj>

Return the

=cut

=head2 pi

Number.pi() -> I<Obj>

Return the

=cut

=head2 primorial

Number.primorial() -> I<Obj>

Return the

=cut

=head2 rad2deg

Number.rad2deg() -> I<Obj>

Return the

=cut

=head2 rad2grad

Number.rad2grad() -> I<Obj>

Return the

=cut

=head2 rand

Number.rand() -> I<Obj>

Return the

=cut

=head2 range

Number.range() -> I<Obj>

Return the

=cut

=head2 rat

Number.rat() -> I<Obj>

Return the

=cut

=head2 root

Number.root() -> I<Obj>

Return the

=cut

=head2 roundf

Number.roundf() -> I<Obj>

Return the

=cut

=head2 sec

Number.sec() -> I<Obj>

Return the

=cut

=head2 sech

Number.sech() -> I<Obj>

Return the

=cut

=head2 sign

Number.sign() -> I<Obj>

Return the

=cut

=head2 sin

Number.sin() -> I<Obj>

Return the

=cut

=head2 sinh

Number.sinh() -> I<Obj>

Return the

=cut

=head2 sqr

Number.sqr() -> I<Obj>

Return the

=cut

=head2 sqrt

Number.sqrt() -> I<Obj>

Return the

=cut

=head2 tan

Number.tan() -> I<Obj>

Return the

=cut

=head2 tanh

Number.tanh() -> I<Obj>

Return the

=cut

=head2 tau

Number.tau() -> I<Obj>

Return the

=cut

=head2 times

Number.times() -> I<Obj>

Return the

=cut

=head2 to

Number.to() -> I<Obj>

Return the

Aliases: I<...()>, I<..^()>, I<upto>

=cut

=head2 zeta

Number.zeta() -> I<Obj>

Return the

=cut

=head2 |

I<Obj> B<|> I<Obj> -> I<Obj>

Return the

Aliases: I<or>

=cut

=head2 ~

I<Obj> B<~> I<Obj> -> I<Obj>

Return the

Aliases: I<not>

=cut

=head2 γ

Number.γ() -> I<Obj>

Return the

=cut

=head2 ≠

I<Obj> B<≠> I<Obj> -> I<Obj>

Return the

Aliases: I<!=()>, I<ne>

=cut

=head2 ≤

I<Obj> B<≤> I<Obj> -> I<Obj>

Return the

Aliases: I<E<lt>=>, I<le>

=cut

=head2 ≥

I<Obj> B<≥> I<Obj> -> I<Obj>

Return the

Aliases: I<E<gt>=>, I<ge>

=cut
