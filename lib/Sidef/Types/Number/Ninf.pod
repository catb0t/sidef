
=encoding utf8

=head1 NAME

Sidef::Types::Number::Ninf

=head1 DESCRIPTION

This object is ...

=head1 SYNOPSIS

var obj = Ninf.new(...);


=head1 INHERITS

Inherits methods from:

	* Sidef::Object::Object
	* Sidef::Convert::Convert
	* Sidef::Types::Number::Number
	* Sidef::Types::Number::Inf

=head1 METHODS


=head2 !

I<Obj> B<!> I<Obj> -> I<Obj>

Return the

Aliases: I<%()>, I<&()>, I<^()>, I<|()>, I<or>, I<and>, I<bin>, I<fac>, I<gcd>, I<lcm>, I<mod>, I<nan>, I<xor>, I<dfac>, I<fmod>, I<zeta>, I<gamma>, I<lucas>, I<expmod>, I<invmod>, I<jacobi>, I<lgamma>, I<modinv>, I<modpow>, I<digamma>, I<next_pow>, I<legendre>, I<next_pow2>, I<factorial>, I<fibonacci>, I<kronecker>, I<next_power>, I<primorial>, I<next_power2>, I<double_factorial>

=cut

=head2 %%

I<Obj> B<%%> I<Obj> -> I<Obj>

Return the

Aliases: I<is_div>, I<is_nan>, I<is_odd>, I<is_pos>, I<is_pow>, I<is_sqr>, I<is_even>, I<is_power>, I<is_prime>, I<is_square>

=cut

=head2 *

I<Obj> B<*> I<Obj> -> I<Obj>

Return the

Aliases: I<mul>, I<imul>

=cut

=head2 **

I<Obj> B<**> I<Obj> -> I<Obj>

Return the

Aliases: I<pow>

=cut

=head2 +

I<Obj> B<+> I<Obj> -> I<Obj>

Return the

Aliases: I<add>, I<iadd>

=cut

=head2 ++

I<Obj> B<++> I<Obj> -> I<Obj>

Return the

Aliases: I<--()>, I<E<lt>E<lt>>, I<E<gt>E<gt>>, I<dec>, I<inc>, I<int>, I<li2>, I<min>, I<rat>, I<ceil>, I<ninf>, I<rand>, I<sinh>, I<as_int>, I<asinh>, I<float>, I<floor>, I<as_float>, I<rand_int>, I<shift_left>, I<shift_right>

=cut

=head2 -

I<Obj> B<-> I<Obj> -> I<Obj>

Return the

Aliases: I<sub>, I<isub>

=cut

=head2 /

I<Obj> B</> I<Obj> -> I<Obj>

Return the

Aliases: I<÷()>, I<//()>, I<div>, I<idiv>

=cut

=head2 <

I<Obj> B<E<lt>> I<Obj> -> I<Obj>

Return the

Aliases: I<lt>

=cut

=head2 <=>

I<Obj> B<E<lt>=E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<cmp>

=cut

=head2 ==

I<Obj> B<==> I<Obj> -> I<Obj>

Return the

Aliases: I<eq>

=cut

=head2 >

I<Obj> B<E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<gt>

=cut

=head2 abs

Ninf.abs() -> I<Obj>

Return the

Aliases: I<cot>, I<csc>, I<inf>, I<len>, I<log>, I<neg>, I<not>, I<sec>, I<tan>, I<cosh>, I<size>, I<acosh>, I<hypot>, I<length>

=cut

=head2 acos

Ninf.acos() -> I<Obj>

Return the

=cut

=head2 as_bin

Ninf.as_bin() -> I<Obj>

Return the

Aliases: I<as_hex>, I<as_oct>

=cut

=head2 asin

Ninf.asin() -> I<Obj>

Return the

Aliases: I<sqrt>

=cut

=head2 atan

Ninf.atan() -> I<Obj>

Return the

=cut

=head2 atanh

Ninf.atanh() -> I<Obj>

Return the

=cut

=head2 chr

Ninf.chr() -> I<Obj>

Return the

=cut

=head2 cos

Ninf.cos() -> I<Obj>

Return the

Aliases: I<exp>, I<inv>, I<sin>, I<csch>, I<eint>, I<exp2>, I<sech>, I<zero>, I<exp10>

=cut

=head2 digits

Ninf.digits() -> I<Obj>

Return the

=cut

=head2 divmod

Ninf.divmod() -> I<Obj>

Return the

=cut

=head2 erf

Ninf.erf() -> I<Obj>

Return the

Aliases: I<coth>, I<tanh>

=cut

=head2 erfc

Ninf.erfc() -> I<Obj>

Return the

=cut

=head2 is_inf

Ninf.is_inf() -> I<Obj>

Return the

=cut

=head2 is_neg

Ninf.is_neg() -> I<Obj>

Return the

=cut

=head2 is_ninf

Ninf.is_ninf() -> I<Obj>

Return the

=cut

=head2 max

Ninf.max() -> I<Obj>

Return the

=cut

=head2 new

Ninf.new() -> I<Obj>

Return the

=cut

=head2 times

Ninf.times() -> I<Obj>

Return the

=cut

=head2 ≠

I<Obj> B<≠> I<Obj> -> I<Obj>

Return the

Aliases: I<!=()>, I<ne>

=cut

=head2 ≤

I<Obj> B<≤> I<Obj> -> I<Obj>

Return the

Aliases: I<E<lt>=>, I<le>

=cut

=head2 ≥

I<Obj> B<≥> I<Obj> -> I<Obj>

Return the

Aliases: I<E<gt>=>, I<ge>

=cut
