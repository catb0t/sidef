
=encoding utf8

=head1 NAME

Sidef::Types::Number::Inf

=head1 DESCRIPTION

This object is ...

=head1 SYNOPSIS

var obj = Inf.new(...);


=head1 INHERITS

Inherits methods from:

	* Sidef::Object::Object
	* Sidef::Convert::Convert
	* Sidef::Types::Number::Number

=head1 METHODS


=head2 !

I<Obj> B<!> I<Obj> -> I<Obj>

Return the

Aliases: I<++()>, I<--()>, I<E<lt>E<lt>>, I<E<gt>E<gt>>, I<abs>, I<cot>, I<csc>, I<dec>, I<exp>, I<fac>, I<inc>, I<inf>, I<int>, I<len>, I<li2>, I<log>, I<max>, I<rat>, I<sec>, I<sqr>, I<tan>, I<cbrt>, I<ceil>, I<cosh>, I<dfac>, I<eint>, I<exp2>, I<log2>, I<rand>, I<root>, I<sinh>, I<size>, I<sqrt>, I<acosh>, I<as_int>, I<asinh>, I<exp10>, I<float>, I<floor>, I<gamma>, I<hypot>, I<log10>, I<lucas>, I<length>, I<lgamma>, I<as_float>, I<digamma>, I<rand_int>, I<factorial>, I<fibonacci>, I<primorial>, I<shift_left>, I<shift_right>, I<double_factorial>

=cut

=head2 %

I<Obj> B<%> I<Obj> -> I<Obj>

Return the

Aliases: I<&()>, I<^()>, I<|()>, I<or>, I<and>, I<bin>, I<gcd>, I<lcm>, I<mod>, I<nan>, I<xor>, I<fmod>, I<expmod>, I<invmod>, I<jacobi>, I<modinv>, I<modpow>, I<next_pow>, I<legendre>, I<next_pow2>, I<kronecker>, I<next_power>, I<next_power2>

=cut

=head2 %%

I<Obj> B<%%> I<Obj> -> I<Obj>

Return the

Aliases: I<is_div>, I<is_nan>, I<is_neg>, I<is_odd>, I<is_pow>, I<is_sqr>, I<is_even>, I<is_ninf>, I<is_power>, I<is_prime>, I<is_square>

=cut

=head2 *

I<Obj> B<*> I<Obj> -> I<Obj>

Return the

Aliases: I<mul>, I<imul>

=cut

=head2 **

I<Obj> B<**> I<Obj> -> I<Obj>

Return the

Aliases: I<pow>

=cut

=head2 +

I<Obj> B<+> I<Obj> -> I<Obj>

Return the

Aliases: I<add>, I<iadd>

=cut

=head2 -

I<Obj> B<-> I<Obj> -> I<Obj>

Return the

Aliases: I<sub>, I<isub>

=cut

=head2 /

I<Obj> B</> I<Obj> -> I<Obj>

Return the

Aliases: I<÷()>, I<//()>, I<div>, I<idiv>

=cut

=head2 <

I<Obj> B<E<lt>> I<Obj> -> I<Obj>

Return the

Aliases: I<lt>

=cut

=head2 <=>

I<Obj> B<E<lt>=E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<cmp>

=cut

=head2 ==

I<Obj> B<==> I<Obj> -> I<Obj>

Return the

Aliases: I<eq>

=cut

=head2 >

I<Obj> B<E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<gt>

=cut

=head2 acos

Inf.acos() -> I<Obj>

Return the

=cut

=head2 as_bin

Inf.as_bin() -> I<Obj>

Return the

Aliases: I<as_hex>, I<as_oct>

=cut

=head2 asin

Inf.asin() -> I<Obj>

Return the

=cut

=head2 atan

Inf.atan() -> I<Obj>

Return the

=cut

=head2 atanh

Inf.atanh() -> I<Obj>

Return the

=cut

=head2 chr

Inf.chr() -> I<Obj>

Return the

=cut

=head2 cos

Inf.cos() -> I<Obj>

Return the

Aliases: I<inv>, I<sin>, I<csch>, I<erfc>, I<sech>, I<zero>

=cut

=head2 digits

Inf.digits() -> I<Obj>

Return the

=cut

=head2 divmod

Inf.divmod() -> I<Obj>

Return the

=cut

=head2 erf

Inf.erf() -> I<Obj>

Return the

Aliases: I<coth>, I<tanh>, I<zeta>

=cut

=head2 is_inf

Inf.is_inf() -> I<Obj>

Return the

=cut

=head2 is_pos

Inf.is_pos() -> I<Obj>

Return the

=cut

=head2 min

Inf.min() -> I<Obj>

Return the

=cut

=head2 neg

Inf.neg() -> I<Obj>

Return the

Aliases: I<not>, I<ninf>

=cut

=head2 new

Inf.new() -> I<Obj>

Return the

=cut

=head2 times

Inf.times() -> I<Obj>

Return the

=cut

=head2 ≠

I<Obj> B<≠> I<Obj> -> I<Obj>

Return the

Aliases: I<!=()>, I<ne>

=cut

=head2 ≤

I<Obj> B<≤> I<Obj> -> I<Obj>

Return the

Aliases: I<E<lt>=>, I<le>

=cut

=head2 ≥

I<Obj> B<≥> I<Obj> -> I<Obj>

Return the

Aliases: I<E<gt>=>, I<ge>

=cut
