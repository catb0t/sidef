
=encoding utf8

=head1 NAME

Sidef::Types::Number::Complex

=head1 DESCRIPTION

This object is ...

=head1 SYNOPSIS

var obj = Complex.new(...);


=head1 INHERITS

Inherits methods from:

	* Sidef::Object::Object
	* Sidef::Convert::Convert
	* Sidef::Types::Number::Number

=head1 METHODS


=head2 *

I<Obj> B<*> I<Obj> -> I<Obj>

Return the

Aliases: I<mul>

=cut

=head2 **

I<Obj> B<**> I<Obj> -> I<Obj>

Return the

Aliases: I<pow>

=cut

=head2 +

I<Obj> B<+> I<Obj> -> I<Obj>

Return the

Aliases: I<add>

=cut

=head2 ++

I<Obj> B<++> I<Obj> -> I<Obj>

Return the

Aliases: I<inc>

=cut

=head2 -

I<Obj> B<-> I<Obj> -> I<Obj>

Return the

Aliases: I<sub>

=cut

=head2 --

I<Obj> B<--> I<Obj> -> I<Obj>

Return the

Aliases: I<dec>

=cut

=head2 /

I<Obj> B</> I<Obj> -> I<Obj>

Return the

Aliases: I<รท()>, I<div>

=cut

=head2 <

I<Obj> B<E<lt>> I<Obj> -> I<Obj>

Return the

Aliases: I<lt>

=cut

=head2 <=

I<Obj> B<E<lt>=> I<Obj> -> I<Obj>

Return the

Aliases: I<le>

=cut

=head2 <=>

I<Obj> B<E<lt>=E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<cmp>

=cut

=head2 ==

I<Obj> B<==> I<Obj> -> I<Obj>

Return the

Aliases: I<eq>

=cut

=head2 >

I<Obj> B<E<gt>> I<Obj> -> I<Obj>

Return the

Aliases: I<gt>

=cut

=head2 >=

I<Obj> B<E<gt>=> I<Obj> -> I<Obj>

Return the

Aliases: I<ge>

=cut

=head2 abs

Complex.abs() -> I<Obj>

Return the

=cut

=head2 dump

Complex.dump() -> I<Obj>

Return the

=cut

=head2 exp

Complex.exp() -> I<Obj>

Return the

=cut

=head2 get_constant

Complex.get_constant() -> I<Obj>

Return the

=cut

=head2 im

Complex.im() -> I<Obj>

Return the

Aliases: I<imag>

=cut

=head2 log

Complex.log() -> I<Obj>

Return the

=cut

=head2 neg

Complex.neg() -> I<Obj>

Return the

=cut

=head2 new

Complex.new() -> I<Obj>

Return the

Aliases: I<call>

=cut

=head2 norm

Complex.norm() -> I<Obj>

Return the

Aliases: I<reciprocal>

=cut

=head2 re

Complex.re() -> I<Obj>

Return the

Aliases: I<real>

=cut

=head2 sqrt

Complex.sqrt() -> I<Obj>

Return the

=cut

=head2 ~

I<Obj> B<~> I<Obj> -> I<Obj>

Return the

Aliases: I<not>, I<conj>, I<conjugate>

=cut
